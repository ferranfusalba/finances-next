import type { Metadata, Viewport } from "next";
// import { Inter, IBM_Plex_Sans } from "next/font/google";
import { SessionProvider } from "next-auth/react";
import { GeistSans } from "geist/font/sans";
import { GeistMono } from "geist/font/mono";

import { auth } from "@/auth";
import "./globals.css";

import BottomNav from "@/components/nav/BottomNav/BottomNav";
import TopNav from "@/components/nav/TopNav/TopNav";

import { Toaster } from "@/components/ui/sonner";
import { ThemeProvider } from "@/components/theme-provider";

// const inter = Inter({ subsets: ["latin"] });
// const ibm = IBM_Plex_Sans({
//   subsets: ["latin"],
//   weight: ["300", "400", "500", "700"],
//   style: ["italic", "normal"],
// });

export const metadata: Metadata = {
  title: "Finances Next",
  description: "Generated by create next app",
};

export const viewport: Viewport = {
  width: "device-width",
  initialScale: 1.0,
  maximumScale: 1.0,
  userScalable: false,
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const serverSession = await auth();

  return (
    <html lang="en" className={`${GeistSans.variable} ${GeistMono.variable}`}>
      <head>
        <link rel="icon" href="/favicon.ico" sizes="any" />
        <link
          rel="icon"
          href="/icon?<generated>"
          type="image/<generated>"
          sizes="<generated>"
        />
        <link
          rel="apple-touch-icon"
          href="/apple-icon?<generated>"
          type="image/<generated>"
          sizes="<generated>"
        />
      </head>
      <body className={`text-slate-100`}>
        <SessionProvider session={serverSession}>
          <header className="fixed top-0 w-full z-10">
            {/* @ts-ignore: Async Server Component TypeScript Error */}
            <TopNav />
          </header>
          <main className="pt-16">
            <Toaster />
            <ThemeProvider
              attribute="class"
              defaultTheme="dark"
              enableSystem
              disableTransitionOnChange
            >
              {children}
            </ThemeProvider>
          </main>
          <footer className="fixed bottom-0 w-full h-auto">
            <BottomNav />
          </footer>
        </SessionProvider>
      </body>
    </html>
  );
}
